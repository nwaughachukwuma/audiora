name: Deploy Server to cloud-run
on:
  pull_request:
    paths:
      - "server/**"
      - "services/**"
      - "utils_pkg/**"
      - ".github/workflows/server.yml"
  push:
    branches:
      - main
    paths:
      - "server/**"
      - "services/**"
      - "utils_pkg/**"
      - ".github/workflows/server.yml"
    tags:
      - "release-*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CI: true
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  SERVICE: audiora-api
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
  ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
  ELEVENLABS_API_KEY: ${{ secrets.ELEVENLABS_API_KEY }}

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      SHORT_SHA: ${{ steps.prepare_env.outputs.SHORT_SHA }}
      VERSION: ${{ github.event_name == 'pull_request' && format('pr-{0}', github.event.number) || format('main-{0}', steps.prepare_env.outputs.SHORT_SHA) }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: prepare_env
        run: |
          echo "TAGGED=${{ startsWith(github.ref, 'refs/tags/server') }}" >> $GITHUB_OUTPUT

          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_OUTPUT

          RAW=$(git branch -r --contains $SHORT_SHA)
          TAG_BRANCH_NAME="${RAW##*/}"
          echo "TAG_BRANCH_NAME=$TAG_BRANCH_NAME" >> $GITHUB_OUTPUT

  deploy:
    runs-on: ubuntu-latest
    needs: [prepare]
    timeout-minutes: 10
    env:
      VERSION: ${{ needs.prepare.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip" # caching pip dependencies
          check-latest: true

      - uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"

      - uses: google-github-actions/setup-gcloud@v2
      - run: gcloud config set app/cloud_build_timeout 300

      - run: |
          cp ./server/.dockerignore .dockerignore
          cp ./server/.gcloudignore .gcloudignore
          cp ./server/Dockerfile Dockerfile

          cat .dockerignore
          cat .gcloudignore
          cat Dockerfile

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          source: ./
          tag: ${{ env.VERSION }}
          no_traffic: true
          timeout: "5m"
          gcloud_version: "482.0.0"
          flags: "--allow-unauthenticated --memory=32Gi --cpu=8 --execution-environment=gen2 --concurrency=80 --max-instances=10"
          env_vars: |
            ENV=prod
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
            ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_API_KEY }}
            ELEVENLABS_API_KEY=${{ secrets.ELEVENLABS_API_KEY }}

      - run: curl -f "${{ steps.deploy.outputs.url }}"
      - uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: server
          message: |
            server: ${{ steps.deploy.outputs.url }} (${{ github.event.pull_request.head.sha }})

            Docs:
            Swagger: ${{ steps.deploy.outputs.url }}/docs
            Redoc: ${{ steps.deploy.outputs.url }}/redoc

  promote:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [prepare, deploy]
    timeout-minutes: 2
    steps:
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"
      - uses: google-github-actions/setup-gcloud@v2
      - run: gcloud run services update-traffic ${{ env.SERVICE }} --to-tags=${{ needs.prepare.outputs.VERSION }}=100 --project=${{ env.PROJECT_ID }} --region=us-central1

  cleanup:
    runs-on: ubuntu-latest
    needs: promote
    timeout-minutes: 2
    steps:
      - uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GCP_SA_KEY }}"
      - uses: google-github-actions/setup-gcloud@v2
      - name: Cleanup older revisions
        run: |
          gcloud run revisions list --service=${{ env.SERVICE }} --project=${{ env.PROJECT_ID }} --region=us-central1 --sort-by=CREATE_TIME --format="value(REVISION)" | tail -n +4 | xargs -I {} gcloud run revisions delete {} --project=${{ env.PROJECT_ID }} --region=us-central1 --quiet
